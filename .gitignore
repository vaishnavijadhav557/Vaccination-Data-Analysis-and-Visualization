import pandas as pd

coverage = pd.read_csv("coverage-data.csv")
incidence = pd.read_csv("incidence-rate-data.csv")
reported_cases = pd.read_csv("reported-cases-data.csv")
vaccine_intro = pd.read_csv("vaccine-introduction-data.csv")
vaccine_schedule = pd.read_csv("vaccine-schedule-data.csv")

print("Coverage:\n", coverage.head(), "\n")
print("Incidence:\n", incidence.head(), "\n")
print("Reported Cases:\n", reported_cases.head(), "\n")
print("Vaccine Intro:\n", vaccine_intro.head(), "\n")
print("Vaccine Schedule:\n", vaccine_schedule.head(), "\n")

# Cleaning of data
def clean_data(df):
    df = df.drop_duplicates()
    df.columns = df.columns.str.strip().str.replace(" ", "_").str.lower()
    return df

coverage = clean_data(coverage)
incidence = clean_data(incidence)
reported_cases = clean_data(reported_cases)
vaccine_intro = clean_data(vaccine_intro)
vaccine_schedule = clean_data(vaccine_schedule)

# Quick check for missing values
print("Coverage Missing Values:\n", coverage.isnull().sum())

# Save clean version
coverage.to_csv("clean_coverage.csv", index=False)
incidence.to_csv("clean_incidence.csv", index=False)
reported_cases.to_csv("clean_reported_cases.csv", index=False)
vaccine_intro.to_csv("clean_vaccine_intro.csv", index=False)
vaccine_schedule.to_csv("clean_vaccine_schedule.csv", index=False)

# Build SQL Database (SQLite) in Colab
# Import SQLite & Connect
import sqlite3

conn = sqlite3.connect("vaccination_project.db")
cursor = conn.cursor()

# Create SQL Tables
# Coverage Table
cursor.execute("""
CREATE TABLE IF NOT EXISTS coverage (
    group_name TEXT,
    code TEXT,
    name TEXT,
    year INTEGER,
    antigen TEXT,
    antigen_description TEXT,
    coverage_category TEXT,
    coverage_category_description TEXT,
    target_number INTEGER,
    doses INTEGER,
    coverage REAL
)
""")

# Incidence Rate Table
cursor.execute("""
CREATE TABLE IF NOT EXISTS incidence (
    group_name TEXT,
    code TEXT,
    name TEXT,
    year INTEGER,
    disease TEXT,
    disease_description TEXT,
    denominator INTEGER,
    incidence_rate REAL
)
""")

# Reported Cases Table
cursor.execute("""
CREATE TABLE IF NOT EXISTS reported_cases (
    group_name TEXT,
    code TEXT,
    name TEXT,
    year INTEGER,
    disease TEXT,
    disease_description TEXT,
    cases INTEGER
)
""")

# Vaccine Introduction Table
cursor.execute("""
CREATE TABLE IF NOT EXISTS vaccine_intro (
    iso_3_code TEXT,
    country_name TEXT,
    who_region TEXT,
    year INTEGER,
    description TEXT,
    intro TEXT
)
""")

# Vaccine Schedule Table
cursor.execute("""
CREATE TABLE IF NOT EXISTS vaccine_schedule (
    iso_3_code TEXT,
    country_name TEXT,
    who_region TEXT,
    year INTEGER,
    vaccine_code TEXT,
    vaccine_description TEXT,
    schedule_rounds TEXT,
    target_pop TEXT,
    target_pop_description TEXT,
    geoarea TEXT,
    age_administered TEXT,
    source_comment TEXT
)
""")
# Insert Data from CSVs into SQL
# Load cleaned CSVs back into pandas
coverage = pd.read_csv("clean_coverage.csv")
incidence = pd.read_csv("clean_incidence.csv")
reported_cases = pd.read_csv("clean_reported_cases.csv")
vaccine_intro = pd.read_csv("clean_vaccine_intro.csv")
vaccine_schedule = pd.read_csv("clean_vaccine_schedule.csv")

# Insert into SQL tables
coverage.to_sql("coverage", conn, if_exists="replace", index=False)
incidence.to_sql("incidence", conn, if_exists="replace", index=False)
reported_cases.to_sql("reported_cases", conn, if_exists="replace", index=False)
vaccine_intro.to_sql("vaccine_intro", conn, if_exists="replace", index=False)
vaccine_schedule.to_sql("vaccine_schedule", conn, if_exists="replace", index=False)

print("All data inserted into SQL database successfully!")

# Test with a Query
query = """
SELECT year, name, antigen, coverage
FROM coverage
WHERE year = 2020
ORDER BY coverage DESC
LIMIT 10
"""
pd.read_sql(query, conn)

# Exploratory Data Analysis (EDA)
# Vaccination Coverage Over Time
query = """
SELECT year, AVG(coverage) as avg_coverage
FROM coverage
GROUP BY year
ORDER BY year
"""
coverage_trend = pd.read_sql(query, conn)

coverage_trend.plot(x="year", y="avg_coverage", kind="line", figsize=(8,5), title="Global Vaccination Coverage Over Time")

# Vaccination vs Disease Incidence
query = """
SELECT c.year, c.name as country, c.coverage, i.incidence_rate
FROM coverage c
JOIN incidence i
ON c.code = i.code AND c.year = i.year
WHERE c.antigen = 'MEASLES' AND i.disease = 'MEASLES'
"""
vacc_vs_disease = pd.read_sql(query, conn)

vacc_vs_disease.plot(kind="scatter", x="coverage", y="incidence_rate", figsize=(6,5), title="Measles: Coverage vs Incidence Rate")

# Drop-Off Between 1st Dose and Booster
query = """
SELECT name, year, antigen, MIN(coverage) as min_dose, MAX(coverage) as max_dose
FROM coverage
WHERE antigen LIKE '%MEASLES%'
GROUP BY name, year
"""
drop_off = pd.read_sql(query, conn)
drop_off["drop_off_rate"] = drop_off["max_dose"] - drop_off["min_dose"]
drop_off.head()

# Top 10 Countries with Lowest Coverage
query = """
SELECT name, year, antigen, coverage
FROM coverage
WHERE year = 2020
ORDER BY coverage ASC
LIMIT 10
"""
pd.read_sql(query, conn)

# Export SQLite Database from Colab
import shutil
shutil.make_archive("vaccination_project", 'zip', ".", "vaccination_project.db")

from google.colab import files
files.download("vaccination_project.zip")










